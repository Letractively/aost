#summary Tellurium First Anniversary: Retrospect And Prospect.
#labels Phase-Support

= Introduction =

The Tellurium Automated Testing Framework (Tellurium) is one year old now if we count from the day that it becomes an open source project. Tellurium was originated from a small project I did for my company, i.e, use Selenium to test one application written in the Dojo Javascript Framework. That was in 2007 and Selenium became popular by that time. Selenium was a ground-breaking framework at that time since it offered of many unique features such as browser testing and creating test scripts using Selenium IDE and then replaying it. It was very attractive to a lot of people including me, which was why I took over the task in our Scrum team. 

Soon, I realized the task was not easy at all because the application was too dynamic to simply use the "record and play" mode. The first thought was to refactor the Selenium IDE generated code to make generalize it. But later, this proved to be as difficult as to re-generate a new test code. To be honest, I was not a web developer and my work mainly focused on the server side of Enterprise applications with a lot of research background in the past. I think my background helped to see problem more clearly. I was hit by the idea: "Why not define the UI objects first and make them robust to changes". 

Many Selenium users like me may also notice that Selenium code is verbose and the XPath locator is everywhere. For maintenance purpose, it is preferable to have structured test code, which led to the UI module concept. The framework was prototyped twice and the prototypes laid the foundation of today's Tellurium framework. Many concepts still remain such as the UI object, UI module, Javascript Events, and dynamically generating runtime locators.  

The prototype was called "Abstract Object-based Selenium Test Framework" (AOST) and was used by our company for internal projects. However, there were very little motivation to improve the framework for internal use since only couple teams used it. In 2008, I worked on a project using Ruby and Rails and was very impressed by its syntax, dynamic programming features, and expressiveness. Motivated by the expressiveness and easiness of the dynamic language, I re-wrote the whole framework using Groovy and made it an open source project so that it can attract more users to urge me to keep improve it. Soon, it was renamed as the Tellurium Automated Testing Framework (Tellurium) and became a team project.

= Look Back =

== Tellurium Project ==

== Tellurium Team ==

== Tellurium Community ==

= Prospect =

= Acknowledgments =