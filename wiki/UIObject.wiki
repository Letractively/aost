#labels Phase-Implementation
== Ui Objects ==

Tellurium provides a set of predefined Ui objects, which users can use directly. Here we describe them one by one in details.

=== Basic Ui Object ===

The basic Ui object is the base class for all Ui objects and it includes the following attributes:

  # uid: Ui object's identifier
  # namespace: for future extension
  # locator: the locator of the UI object, could be a base locator or a composite locator

and the base Ui object also provides the following methods:

  * boolean isElementPresent()
  * boolean isVisible()
  * boolean isDisabled()
  * waitForElementPresent(int timeout), where the time unit is ms.
  * waitForElementPresent(int timeout, int step)
  * String getText()
  * getAttribute(String attribute)

This also means all Ui Objects will inherit the above attributes and methods.

=== Button ===

Button represents various Buttons on the web and its default tag is "input". The following methods can be applied to Button:

  * click()
  * doubleClick()
  * clickAt(String coordination)

=== SubmitButton ===

SubmitButton is a special Button with its type being "submit".


=== CheckBox ===

The CheckBox on the web is abstracted as "CheckBox" Ui object. The default tag for CheckBox is "input" and its type is "checkbox". CheckBox comes with the following methods:

  * check()
  * boolean isChecked()
  * uncheck()

=== Div ===

Div is often used in the Dojo framework and it can represent a lot objects. Obviously, its tag is "div" and it has the following method:

  * click()

=== Image ===

Image is used to abstract the "img" tag and it comes with the following additional methods:

  * getImageSource()
  * getImageAlt()
  * String getImageTitle()

=== Icon ===

Icon is similar to the Image object, but user can perform actions on it. As a result, it can have the following additional methods:

  * click()
  * doubleClick()
  * clickAt(String coordination)

=== RadioButton ===

RadioButton is the abstract object for the Radio Button Ui. As a result, its default tag is "input" and its type is "radio". RadioButton has the following additional methods:

  * check()
  * boolean isChecked()
  * uncheck()
  * String getValue()

=== TextBox ===

TextBox is the abstract Ui object from which you can get back the text, i.e., it comes with the method:

  * String waitForText(int timeout)

Note, TextBox can have various types of tags.

=== InputBox ===

InputBox is the Ui where user types in input data. As its name stands, InputBox's default tag is "input". InputBox has the following additional methods:

  * type(String input)
  * keyType(String input), used to simulate keyboard typing
  * typeAndReturn(String input)
  * clearText()
  * boolean isEditable()
  * String getValue()

=== UrlLink ===

UrlLink stands for the web url link, i.e., its tag is "a". UrlLink has the following additional methods:

  * String getLink()
  * click()
  * doubleClick()
  * clickAt(String coordination)

=== Selector ===

Selector represents the Ui with tag "select" and user can select from a set of options. Selector has a lot of methods, such as:

  * selectByLabel(String target)
  * selectByValue(String value)
  * addSelectionByLabel(String target)
  * addSelectionByValue(String value)
  * removeSelectionByLabel(String target)
  * removeSelectionByValue(String value)
  * removeAllSelections()
  * String[] getSelectOptions()
  * String[] getSelectedLabels()
  * String getSelectedLabel()
  * String[] getSelectedValues()
  * String getSelectedValue()
  * String[] getSelectedIndexes()
  * String getSelectedIndex()
  * String[] getSelectedIds()
  * String getSelectedId()
  * boolean isSomethingSelected()
