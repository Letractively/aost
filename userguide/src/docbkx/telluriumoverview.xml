<?xml version="1.0" encoding="UTF-8"?>
<book version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink">
    <info>
        <title>Tellurium Overview</title>
    </info>
    <informaltable frame="none">
        <tgroup cols="1">
            <colspec colname="c1" colwidth="100*"/>
            <tbody>
                <row>
                    <entry>
                        <para>
                            <anchor xml:id="wikimeta"/>
                            <anchor xml:id="wikiheader"/>TelluriumOverview   Overview.
                            <bridgehead remap="h1"><anchor xml:id="What_is_Tellurium" xreflabel="What is Tellurium"/>
                                What is Tellurium
                            </bridgehead>
                            <link xl:href="http://code.google.com/p/aost/">The Tellurium Automated Testing Framework
                            </link>
                            (Tellurium) is an automated testing framework for web applications. Tellurium grew up from
                            <link xl:href="http://seleniumhq.org/">the Selenium framework</link>, but with a different
                            testing concept. Starting from Tellurium 0.7.0, Tellurium added Tellurium Engine to replace
                            the Selenium Core to better support Tellurium.
                        </para>
                        <bridgehead remap="h2"><anchor xml:id="Why_Tellurium_is_Novel"
                                                       xreflabel="Why Tellurium is Novel"/>Why Tellurium is Novel
                        </bridgehead>
                        <para><anchor xml:id="Why_Tellurium_is_Novel.1"
                                      xreflabel="For most existing web testing frameworks like Selenium, they mainly focus on individual UI elements as follows. "/>
                            For most existing web testing frameworks like Selenium, they mainly focus on individual UI
                            elements as follows.
                        </para>
                        <para>
                            <anchor xml:id="Why_Tellurium_is_Novel.2" xreflabel=""/>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/tellurium3.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/tellurium3.png" scalefit="1" width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <para><anchor xml:id="Why_Tellurium_is_Novel.3" xreflabel="For example: "/>For example:
                        </para>
                        <screen><anchor xml:id="Why_Tellurium_is_Novel.4"
                                        xreflabel="   selenium.click(&quot;//div[3]/input[@value=&apos;Create&apos;]&quot;);"/>
                               selenium.click(&quot;//div[3]/input[@value=&apos;Create&apos;]&quot;);
                        </screen>
                        <para><anchor xml:id="Why_Tellurium_is_Novel.5"
                                      xreflabel="For Tellurium, we treated the whole UI elements as a widget and we call it a UI module. "/>
                            For Tellurium, we treated the whole UI elements as a widget and we call it a UI module.
                        </para>
                        <para>
                            <anchor xml:id="Why_Tellurium_is_Novel.6" xreflabel=""/>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/tellurium4.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/tellurium4.png" scalefit="1" width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <para><anchor xml:id="Why_Tellurium_is_Novel.7"
                                      xreflabel="We define the UI module as follows. "/>We define the UI module as
                            follows.
                        </para>
                        <screen><anchor xml:id="Why_Tellurium_is_Novel.8"
                                        xreflabel="    ui.Form(uid:&quot;Form&quot;, clocator:[tag:&quot;form&quot;]){        Div(uid:&quot;User&quot;, clocator:[:]){            Selector(uid:&quot;Sex&quot;, clocator:[:])            InputBox(uid:&quot;Input&quot;, clocator:[tag:&quot;input&quot;, type:&quot;text&quot;, name:&quot;j_username&quot;])        }        Container(uid:&quot;Finish&quot;, clocator:[tag:&quot;tr&quot;]){            SubmitButton(uid:&quot;Submit&quot;, clocator:[tag:&quot;input&quot;, type:&quot;submit&quot;, value:&quot;Login&quot;, name:&quot;submit&quot;])        }    }"/>
                                ui.Form(uid:&quot;Form&quot;, clocator:[tag:&quot;form&quot;]){
                                    Div(uid:&quot;User&quot;, clocator:[:]){
                                        Selector(uid:&quot;Sex&quot;, clocator:[:])
                                        InputBox(uid:&quot;Input&quot;, clocator:[tag:&quot;input&quot;, type:&quot;text&quot;,
                            name:&quot;j_username&quot;])
                                    }
                                    Container(uid:&quot;Finish&quot;, clocator:[tag:&quot;tr&quot;]){
                                        SubmitButton(uid:&quot;Submit&quot;, clocator:[tag:&quot;input&quot;, type:&quot;submit&quot;,
                            value:&quot;Login&quot;, name:&quot;submit&quot;])
                                    }
                                }
                        </screen>
                        <bridgehead remap="h2"><anchor xml:id="Advantages" xreflabel="Advantages"/>Advantages
                        </bridgehead>
                        <para><anchor xml:id="Advantages.1" xreflabel="If
we think Selenium as the &quot;C&quot; language, Tellurium is like the &quot;C++&quot;
language, which uses a different testing concept. There are couple
advantages to describe the UI elements as a UI module. "/>If we think Selenium as the &quot;C&quot; language, Tellurium
                            is like the &quot;C++&quot; language, which uses a different testing concept. There are
                            couple advantages to describe the UI elements as a UI module.
                        </para>
                        <bridgehead remap="h3"><anchor xml:id="Expressive" xreflabel="Expressive"/>Expressive
                        </bridgehead>
                        <para>
                            <anchor xml:id="Expressive.1" xreflabel="Expressive
is obvious. For example, you can see clearly what the UI you are
testing against. For the test code, you have DSL style test code such
as: "/>
                            <emphasis>Expressive</emphasis>
                            is obvious. For example, you can see clearly what the UI you are testing against. For the
                            test code, you have DSL style test code such as:
                        </para>
                        <screen><anchor xml:id="Expressive.2"
                                        xreflabel="   type &quot;Form.User.Input&quot;,&quot;John Fang&quot;"/>   type
                            &quot;Form.User.Input&quot;,&quot;John Fang&quot;
                        </screen>
                        <bridgehead remap="h3"><anchor xml:id="Robust_to_Changes" xreflabel="Robust to Changes"/>Robust
                            to Changes
                        </bridgehead>
                        <para><anchor xml:id="Robust_to_Changes.1" xreflabel="Test
robust is always a big issue for Selenium. To solve this problem is one
of the main motivations that Tellurium was created for. Tellurium uses
UI attributes to describe UI instead of fixed locators. If we change
the attributes, new runtime locators will be generated by the framework
so that Tellurium can self-adapt to UI changes to some degree. "/>Test robust is always a big issue for Selenium. To
                            solve this problem is one of the main motivations that Tellurium was created for. Tellurium
                            uses UI attributes to describe UI instead of fixed locators. If we change the attributes,
                            new runtime locators will be generated by the framework so that Tellurium can self-adapt to
                            UI changes to some degree.
                            <link xl:href="http://code.google.com/p/aost/wiki/SantaUiModuleGroupLocatingAlgorithm">The
                                Santa algorithm
                            </link>
                            in Tellurium new engine further improves the test robust by using UI partial matching.
                        </para>
                        <bridgehead remap="h3"><anchor xml:id="Represent_Dynamic_Web_Content_Easily"
                                                       xreflabel="Represent Dynamic Web Content Easily"/>Represent
                            Dynamic Web Content Easily
                        </bridgehead>
                        <para><anchor xml:id="Represent_Dynamic_Web_Content_Easily.1" xreflabel="The "/>The
                            <link xl:href="http://code.google.com/p/aost/wiki/UserGuide070TelluriumBasics#UI_Templates">
                                Tellurium UI templates
                            </link>
                            are used to represent dynamic web content very easily. For example,
                            <link xl:href="http://code.google.com/p/aost/issues/list">Tellurium issue search result
                                widget
                            </link>
                            can be easily represented as follows.
                        </para>
                        <screen>    ui.Table(uid:&quot;issueResult&quot;, clocator:[id:&quot;resultstable&quot;,class:&quot;results&quot;],group:&quot;true&quot;){
                                  //Define the header elements
                                  UrlLink(uid:&quot;{header: any} as ID&quot;, clocator:[text:&quot;*ID&quot;])
                                  UrlLink(uid:&quot;{header: any} as Type&quot;, clocator:[text:&quot;*Type&quot;])
                                  UrlLink(uid:&quot;{header: any} as Status&quot;, clocator:[text:&quot;*Status&quot;])
                                  UrlLink(uid:&quot;{header: any} as Priority&quot;, clocator:[text:&quot;*Priority&quot;])
                                  UrlLink(uid:&quot;{header: any} as Milestone&quot;, clocator:[text:&quot;*Milestone&quot;])
                                  UrlLink(uid:&quot;{header: any} as Owner&quot;, clocator:[text:&quot;*Owner&quot;])
                                  UrlLink(uid:&quot;{header: any} as Summary&quot;, clocator:[text:&quot;*Summary +
                            Labels&quot;])
                                  UrlLink(uid:&quot;{header: any} as Extra&quot;, clocator:[text:&quot;*...&quot;])

                                  //Define table body elements
                                  //Column &quot;Extra&quot; are TextBoxs
                                  TextBox(uid:&quot;{row: all, column -&gt; Extra}&quot;, clocator:[:])
                                  //For the rest, they are UrlLinks
                                  UrlLink(uid:&quot;{row: all, column: all}&quot;, clocator:[:])
                                }
                        </screen>
                        <bridgehead remap="h3"><anchor xml:id="Easy_to_Maintain" xreflabel="Easy to Maintain"/>Easy to
                            Maintain
                        </bridgehead>
                        <para><anchor xml:id="Easy_to_Maintain.1" xreflabel="Tellurium
emphasizes the decoupling of UI from test code. The structured test
code makes Tellurium easier to maintain and refactor. "/>Tellurium emphasizes the decoupling of UI from test code. The
                            structured test code makes Tellurium easier to maintain and refactor.
                        </para>
                        <bridgehead remap="h1"><anchor xml:id="Motivation" xreflabel="Motivation"/>Motivation
                        </bridgehead>
                        <para><anchor xml:id="Motivation.1" xreflabel="Automated
web testing has always been one of the hottest and most important
topics in the software testing arena when it comes to the rising
popularity of Rich Internet applications (RIA) and Ajax-based web
applications. With the advent of new web techniques such as RIA and
Ajax, automated web testing tools must keep current with changes in
technology and be able to address the following challenges: "/>Automated web testing has always been one of the hottest
                            and most important topics in the software testing arena when it comes to the rising
                            popularity of Rich Internet applications (RIA) and Ajax-based web applications. With the
                            advent of new web techniques such as RIA and Ajax, automated web testing tools must keep
                            current with changes in technology and be able to address the following challenges:
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <anchor xml:id="Motivation.2" xreflabel="JavaScript Events:
JavaScript is everywhere on the web today. Many web applications are
JavaScript heavy. To test JavaScript, the automated testing framework
should be able to trigger JavaScript events in a convenient way. "/>
                                    <emphasis role="bold">JavaScript Events</emphasis>: JavaScript is everywhere on the
                                    web today. Many web applications are JavaScript heavy. To test JavaScript, the
                                    automated testing framework should be able to trigger JavaScript events in a
                                    convenient way.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <anchor xml:id="Motivation.3" xreflabel="Ajax for Dynamic Web Content:
Web applications have many benefits over desktop applications. For
example, these applications have no installation and updates are
instantaneous and easier to support. Ajax is a convenient way to update
a part of the web page without refreshing the whole page. AJAX makes
web applications richer and more user-friendly. The web context for an
Ajax application is usually dynamic. For example, in a data grid, the
data and number of rows keeps changing at runtime. "/>
                                    <emphasis role="bold">Ajax for Dynamic Web Content</emphasis>: Web applications have
                                    many benefits over desktop applications. For example, these applications have no
                                    installation and updates are instantaneous and easier to support. Ajax is a
                                    convenient way to update a part of the web page without refreshing the whole page.
                                    AJAX makes web applications richer and more user-friendly. The web context for an
                                    Ajax application is usually dynamic. For example, in a data grid, the data and
                                    number of rows keeps changing at runtime.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <anchor xml:id="Motivation.4" xreflabel="Robust/Responsive to Changes:
A good automated web-testing tool should be able to address the changes
in the web context to some degree so that users do not need to keep
updating the test code. "/>
                                    <emphasis role="bold">Robust/Responsive to Changes</emphasis>: A good automated
                                    web-testing tool should be able to address the changes in the web context to some
                                    degree so that users do not need to keep updating the test code.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <anchor xml:id="Motivation.5" xreflabel="Easy to Maintain:
In an agile testing world, software development is based on iterations,
and new features are added on in each sprint. The functional tests or
user acceptance tests must be refactored and updated for the new
features. The testing framework should provide the flexibility for
users to maintain the test code easily. "/>
                                    <emphasis role="bold">Easy to Maintain</emphasis>: In an agile testing world,
                                    software development is based on iterations, and new features are added on in each
                                    sprint. The functional tests or user acceptance tests must be refactored and updated
                                    for the new features. The testing framework should provide the flexibility for users
                                    to maintain the test code easily.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <anchor xml:id="Motivation.6" xreflabel="Re-usability:
Many web applications use the same UI module for different parts of the
application. The adoption of JavaScript frameworks such as Dojo and
ExtJS increases the chance of using the same UI module for different
web applications. A good testing framework should also be able to
provide the re-usability of test modules. "/>
                                    <emphasis role="bold">Re-usability</emphasis>: Many web applications use the same UI
                                    module for different parts of the application. The adoption of JavaScript frameworks
                                    such as Dojo and ExtJS increases the chance of using the same UI module for
                                    different web applications. A good testing framework should also be able to provide
                                    the re-usability of test modules.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <anchor xml:id="Motivation.7" xreflabel="Expressiveness:
The testing framework provides users without much coding experience the
ability to easily write test code or scripts in a familiar way, such as
using a domain specific language (DSL). "/>
                                    <emphasis role="bold">Expressiveness</emphasis>: The testing framework provides
                                    users without much coding experience the ability to easily write test code or
                                    scripts in a familiar way, such as using a domain specific language (DSL).
                                </para>
                            </listitem>
                        </itemizedlist>
                        <para><anchor xml:id="Motivation.8" xreflabel="The
Tellurium Automated Testing Framework (Tellurium) is designed around
these considerations and has defined as its focus the following goals: "/>The Tellurium Automated Testing Framework
                            (Tellurium) is designed around these considerations and has defined as its focus the
                            following goals:
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para><anchor xml:id="Motivation.9"
                                              xreflabel="Robust/responsive to changes; allow changes to be localized "/>
                                    Robust/responsive to changes; allow changes to be localized
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Motivation.10"
                                              xreflabel="Addresses dynamic web contexts such as JavaScript events and Ajax "/>
                                    Addresses dynamic web contexts such as JavaScript events and Ajax
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Motivation.11" xreflabel="Easy to refactor and maintain "/>Easy to
                                    refactor and maintain
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Motivation.12" xreflabel="Modular; test modules are reusable "/>
                                    Modular; test modules are reusable
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Motivation.13" xreflabel="Expressive and easy to use "/>Expressive
                                    and easy to use
                                </para>
                            </listitem>
                        </itemizedlist>
                        <bridgehead remap="h1"><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing"
                                                       xreflabel="Tellurium, the New Approach for Web Testing"/>
                            Tellurium, the New Approach for Web Testing
                        </bridgehead>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.1" xreflabel="The
Tellurium Automated Testing Framework (Tellurium) is an open source
automated testing framework for web applications that addresses the
challenges and problems of today’s web testing. "/>The Tellurium Automated Testing Framework (Tellurium) is an open
                            source automated testing framework for web applications that addresses the challenges and
                            problems of today’s web testing.
                        </para>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.2" xreflabel="Most
existing web testing tools/frameworks focus on individual UI elements
such as links and buttons. Tellurium takes a new approach for automated
web testing by using the concept of the UI module. "/>Most existing web testing tools/frameworks focus on individual UI
                            elements such as links and buttons. Tellurium takes a new approach for automated web testing
                            by using the concept of the UI module.
                        </para>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.3" xreflabel="The UI module
is a collection of UI elements grouped together. Usually, the UI module
represents a composite UI object in the format of nested basic UI
elements. For example, the Google search UI module can be expressed as
follows: "/>The
                            <emphasis>UI module</emphasis>
                            is a collection of UI elements grouped together. Usually, the UI module represents a
                            composite UI object in the format of nested basic UI elements. For example, the Google
                            search UI module can be expressed as follows:
                        </para>
                        <screen><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.4"
                                        xreflabel="ui.Container(uid:&quot;GoogleSearchModule&quot;, clocator:[tag:&quot;td&quot;],group:&quot;true&quot;){  InputBox(uid:&quot;Input&quot;, clocator:[title:&quot;Google Search&quot;])  SubmitButton(uid:&quot;Search&quot;, clocator:[name:&quot;btnG&quot;, value:&quot;Google Search&quot;])  SubmitButton(uid:&quot;ImFeelingLucky&quot;, clocator:[value:&quot;I&apos;m Feeling Lucky&quot;])}"/>
                            ui.Container(uid:&quot;GoogleSearchModule&quot;, clocator:[tag:&quot;td&quot;],group:&quot;true&quot;){
                              InputBox(uid:&quot;Input&quot;, clocator:[title:&quot;Google Search&quot;])
                              SubmitButton(uid:&quot;Search&quot;, clocator:[name:&quot;btnG&quot;, value:&quot;Google
                            Search&quot;])
                              SubmitButton(uid:&quot;ImFeelingLucky&quot;, clocator:[value:&quot;I&apos;m Feeling Lucky&quot;])
                            }
                        </screen>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.5" xreflabel="Tellurium
is built on the foundation of the UI module. The UI module makes it
possible to build locators for UI elements at runtime. First, this
makes Tellurium robust and responsive to changes from internal UI
elements. Second, the UI module makes Tellurium expressive. UI elements
can be referred to simply by appending the names (uid) along the path
to the specific element. This also enables Tellurium&apos;s Group Locating feature, making composite objects reusable, and addressing dynamic web pages. "/>
                            Tellurium is built on the foundation of the UI module. The UI module makes it possible to
                            build locators for UI elements at runtime. First, this makes Tellurium robust and responsive
                            to changes from internal UI elements. Second, the UI module makes Tellurium expressive. UI
                            elements can be referred to simply by appending the names (uid) along the path to the
                            specific element. This also enables
                            <emphasis>Tellurium&apos;s Group Locating</emphasis>
                            feature, making composite objects reusable, and addressing dynamic web pages.
                        </para>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.6" xreflabel="Tellurium
is implemented in Groovy and Java. The test cases can be written in
Java, Groovy, or pure Domain Specific Language (DSL) scripts. Tellurium
evolved out of Selenium. However, the UI testing approach is completely
different. Tellurium is not a &quot;record and replay&quot; style framework, and
it enforces the separation of UI modules from test code, making
refactoring easy. "/>Tellurium is implemented in Groovy and Java. The test cases can be written in Java, Groovy, or pure
                            Domain Specific Language (DSL) scripts. Tellurium evolved out of Selenium. However, the UI
                            testing approach is completely different. Tellurium is not a &quot;record and replay&quot;
                            style framework, and it enforces the separation of UI modules from test code, making
                            refactoring easy.
                        </para>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.7"
                                      xreflabel="For example, once the Google Search UI module is defined as previously shown, the test code is written as follows: "/>
                            For example, once the Google Search UI module is defined as previously shown, the test code
                            is written as follows:
                        </para>
                        <screen><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.8"
                                        xreflabel="type &quot;GoogleSearchModule.Input&quot;,&quot;Tellurium test&quot;click &quot;GoogleSearchModule.Search&quot;"/>
                            type &quot;GoogleSearchModule.Input&quot;,&quot;Tellurium test&quot;
                            click &quot;GoogleSearchModule.Search&quot;
                        </screen>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.9" xreflabel="Tellurium
sets the Object to Locator Mapping (OLM) automatically at runtime so
that UI objects can be defined simply by their attributes using
Composite Locators. Tellurium uses the Group Locating Concept (GLC) to
exploit information inside a collection of UI components so that
locators can find their elements. "/>Tellurium sets the Object to Locator Mapping (OLM) automatically at runtime so that
                            UI objects can be defined simply by their attributes using Composite Locators. Tellurium
                            uses the Group Locating Concept (GLC) to exploit information inside a collection of UI
                            components so that locators can find their elements.
                        </para>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.10" xreflabel="Tellurium
also defines a set of DSLs for web testing. Furthermore, Tellurium uses
UI templates to define sets of dynamic UI elements at runtime. As a
result, Tellurium is robust, expressive, flexible, reusable, and easy
to maintain. "/>Tellurium also defines a set of DSLs for web testing. Furthermore, Tellurium uses UI templates to define
                            sets of dynamic UI elements at runtime. As a result, Tellurium is robust, expressive,
                            flexible, reusable, and easy to maintain.
                        </para>
                        <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.11"
                                      xreflabel="The main features of Tellurium include: "/>The main features of
                            Tellurium include:
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.12"
                                              xreflabel="Abstract UI objects to encapsulate web UI elements "/>Abstract
                                    UI objects to encapsulate web UI elements
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.13"
                                              xreflabel="UI module for structured test code and re-usability "/>UI
                                    module for structured test code and re-usability
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.14"
                                              xreflabel="DSL for UI definition, actions, and testing "/>DSL for UI
                                    definition, actions, and testing
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.15"
                                              xreflabel="Composite Locator to use a set of attributes to describe a UI element "/>
                                    Composite Locator to use a set of attributes to describe a UI element
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.16"
                                              xreflabel="Group locating to exploit information inside a collection of UI components "/>
                                    Group locating to exploit information inside a collection of UI components
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.17"
                                              xreflabel="Dynamically generate runtime locators to localize changes "/>
                                    Dynamically generate runtime locators to localize changes
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.18"
                                              xreflabel="UI templates for dynamic web content "/>UI templates for
                                    dynamic web content
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.19"
                                              xreflabel="XPath support "/>XPath support
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.20"
                                              xreflabel="jQuery selector support to improve test speed in IE "/>jQuery
                                    selector support to improve test speed in IE
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.21"
                                              xreflabel="Locator caching to improve speed "/>Locator caching to improve
                                    speed
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.22"
                                              xreflabel="Javascript event support "/>Javascript event support
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.23"
                                              xreflabel="Use Tellurium Firefox plugin, Trump, to automatically generate UI modules "/>
                                    Use Tellurium Firefox plugin, Trump, to automatically generate UI modules
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.24"
                                              xreflabel="Dojo and ExtJS widget extensions "/>Dojo and ExtJS widget
                                    extensions
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.25"
                                              xreflabel="Data driven test support "/>Data driven test support
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.26"
                                              xreflabel="Selenium Grid support "/>Selenium Grid support
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.27"
                                              xreflabel="JUnit and TestNG support "/>JUnit and TestNG support
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium-_the_New_Approach_for_Web_Testing.28"
                                              xreflabel="Ant and Maven support "/>Ant and Maven support
                                </para>
                            </listitem>
                        </itemizedlist>
                        <bridgehead remap="h1"><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium"
                                                       xreflabel="How Challenges and Problems Are Addressed in Tellurium"/>
                            How Challenges and Problems Are Addressed in Tellurium
                        </bridgehead>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.1" xreflabel="First,
Tellurium does not use &quot;record and replay&quot;. Instead, it uses the
Tellurium Firefox plugin TrUMP to generate the UI module (not test
code) for you. Then test code based on the UI module is created. "/>First, Tellurium does not use &quot;record and
                            replay&quot;. Instead, it uses the Tellurium Firefox plugin TrUMP to generate the UI module
                            (not test code) for you. Then test code based on the UI module is created.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.2" xreflabel="In
this way, the UI and the test code are decoupled. The structured test
code in Tellurium makes it much easier to refactor and maintain the
code. "/>In this way, the UI and the test code are decoupled. The structured test code in Tellurium makes it much easier
                            to refactor and maintain the code.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.3" xreflabel="The
composite locator uses UI element attributes to define the UI, and the
actual locator (for example, XPath or jQuery selector), is generated at
runtime. Any updates to the composite locator lead to different runtime
locators, and the changes inside the UI module are localized. "/>The composite locator uses UI element attributes to
                            define the UI, and the actual locator (for example, XPath or jQuery selector), is generated
                            at runtime. Any updates to the composite locator lead to different runtime locators, and the
                            changes inside the UI module are localized.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.4" xreflabel="The
Group locating is used to remove the dependency of the UI objects from
external UI elements (for example, external UI changes do not affect
the current UI module for most cases), so that test code is robust and
responsive to changes up to a certain level. "/>The Group locating is used to remove the dependency of the UI objects
                            from external UI elements (for example, external UI changes do not affect the current UI
                            module for most cases), so that test code is robust and responsive to changes up to a
                            certain level.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.5"
                                      xreflabel="Tellurium uses the respond attribute in a UI object to specify JavaScript events, and the rest is handled automatically by the framework itself. "/>
                            Tellurium uses the
                            <emphasis>respond</emphasis>
                            attribute in a UI object to specify JavaScript events, and the rest is handled automatically
                            by the framework itself.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.6" xreflabel="UI
templates are a powerful feature in Tellurium used to represent many
identical UI elements or a dynamic size of different UI elements at
runtime. This is extremely useful in testing dynamic web contexts such
as a data grid. "/>UI templates are a powerful feature in Tellurium used to represent many identical UI elements or a
                            dynamic size of different UI elements at runtime. This is extremely useful in testing
                            dynamic web contexts such as a data grid.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.7"
                                      xreflabel="The Option UI object is designed to automatically address dynamic web contexts with multiple possible UI patterns. "/>
                            The
                            <emphasis>Option</emphasis>
                            UI object is designed to automatically address dynamic web contexts with multiple possible
                            UI patterns.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.8" xreflabel="Re-usability
is achieved by the UI module when working within one application and by
Tellurium Widgets when working across different web applications. With
the Domain Specific Language (DSL) in Tellurium, UI modules can be
defined and test code written in a very expressive way. "/>Re-usability is achieved by the UI module when working within
                            one application and by Tellurium Widgets when working across different web applications.
                            With the Domain Specific Language (DSL) in Tellurium, UI modules can be defined and test
                            code written in a very expressive way.
                        </para>
                        <para><anchor xml:id="How_Challenges_and_Problems_Are_Addressed_in_Tellurium.9"
                                      xreflabel="Tellurium also provides flexibility to write test code in Java, Groovy, or pure DSL scripts. "/>
                            Tellurium also provides flexibility to write test code in Java, Groovy, or pure DSL scripts.
                        </para>
                        <bridgehead remap="h1"><anchor xml:id="Tellurium_Architecture"
                                                       xreflabel="Tellurium Architecture"/>Tellurium Architecture
                        </bridgehead>
                        <para><anchor xml:id="Tellurium_Architecture.1"
                                      xreflabel="Tellurium architecture is shown in the following diagram. "/>Tellurium
                            architecture is shown in the following diagram.
                        </para>
                        <para>
                            <anchor xml:id="Tellurium_Architecture.2" xreflabel=""/>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/telluriumnewarchitecture070.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/telluriumnewarchitecture070.png" scalefit="1"
                                               width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.3" xreflabel="There
are two major parts, i.e., the Tellurium Core, which does Java/Groovy
object to runtime locator mapping, event handling, and command
bundling. The Tellurium Engine is embedded inside the Selenium server
and is a test driving engine for Tellurium. The two are connected by
Selenium RC. "/>There are two major parts, i.e., the Tellurium Core, which does Java/Groovy object to runtime locator
                            mapping, event handling, and command bundling. The Tellurium Engine is embedded inside the
                            Selenium server and is a test driving engine for Tellurium. The two are connected by
                            Selenium RC.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.4"
                                      xreflabel="The DSL parser consists of the DSL Object Parser, Object Builders, and the Object Registry. "/>
                            The DSL parser consists of the DSL Object Parser, Object Builders, and the Object Registry.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.5" xreflabel="Using
Groovy builder pattern, UI objects are defined expressively and in a
nested fashion. The DSL object parser parses the DSL object definition
recursively and uses object builders to build the objects on the fly.
An object builder registry is designed to hold all predefined UI object
builders in the Tellurium framework, and the DSL object parser looks at
the builder registry to find the appropriate builders. "/>Using Groovy builder pattern, UI objects are defined
                            expressively and in a nested fashion. The DSL object parser parses the DSL object definition
                            recursively and uses object builders to build the objects on the fly. An object builder
                            registry is designed to hold all predefined UI object builders in the Tellurium framework,
                            and the DSL object parser looks at the builder registry to find the appropriate builders.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.6" xreflabel="Since
the registry is a hash map, you can override a builder with a new one
using the same UI name. Users can also add their customer builders into
the builder registry. The DSL object definition always comes first with
a container type object. An object registry (a hash map) is used to
store all top level UI Objects. As a result, for each DSL object
definition, the top object IDs must be unique in the DslContext. The
object registry is used by the framework to search for objects by their
IDs and fetch objects for different actions. "/>Since the registry is a hash map, you can override a builder with a new
                            one using the same UI name. Users can also add their customer builders into the builder
                            registry. The DSL object definition always comes first with a container type object. An
                            object registry (a hash map) is used to store all top level UI Objects. As a result, for
                            each DSL object definition, the top object IDs must be unique in the DslContext. The object
                            registry is used by the framework to search for objects by their IDs and fetch objects for
                            different actions.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.7" xreflabel="The
Object Locator Mapping (OLM) is the core of the Tellurium framework and
it includes UI ID mapping, XPath builder, jQuery selector builder, and
Group Locating. "/>The Object Locator Mapping (OLM) is the core of the Tellurium framework and it includes UI ID
                            mapping, XPath builder, jQuery selector builder, and Group Locating.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.8"
                                      xreflabel="The UI ID supports nested objects. For example, &quot;menu.wiki&quot; stands for a URL Link &quot;wiki&quot; inside a container called &quot;menu&quot;. "/>
                            The UI ID supports nested objects. For example, &quot;menu.wiki&quot; stands for a URL Link
                            &quot;wiki&quot; inside a container called &quot;menu&quot;.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.9"
                                      xreflabel="The UI ID also supports one-dimensional and two-dimensional indices for tables and lists. For example, &quot;main.table[2][3]&quot; stands for the UI object of the 2nd row and the 3rd column of a table inside the container &quot;main&quot;. "/>
                            The UI ID also supports one-dimensional and two-dimensional indices for tables and lists.
                            For example,
                            <literal>&quot;main.table[2][3]&quot;</literal>
                            stands for the UI object of the 2nd row and the 3rd column of a table inside the container
                            &quot;main&quot;.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.10" xreflabel="XPath
builder builds the XPath from the composite locator. For example, a set
of attributes. Starting with version 0.6.0, Tellurium supports jQuery
selectors to address the problem of poor performance of XPath in
Internet Explorer. "/>XPath builder builds the XPath from the composite locator. For example, a set of attributes.
                            Starting with version 0.6.0, Tellurium supports jQuery selectors to address the problem of
                            poor performance of XPath in Internet Explorer.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.11"
                                      xreflabel="jQuery selector builders are used to automatically generate jQuery selectors instead of XPath with the following advantages: "/>
                            jQuery selector builders are used to automatically generate jQuery selectors instead of
                            XPath with the following advantages:
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para><anchor xml:id="Tellurium_Architecture.12"
                                              xreflabel="Provides faster performance in IE "/>Provides faster
                                    performance in IE
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium_Architecture.13"
                                              xreflabel="Leverages the power of jQuery to retrieve bulk data from the web by testing with one method call "/>
                                    Leverages the power of jQuery to retrieve bulk data from the web by testing with one
                                    method call
                                </para>
                            </listitem>
                            <listitem>
                                <para><anchor xml:id="Tellurium_Architecture.14"
                                              xreflabel="Provides new features using jQuery attribute selectors "/>
                                    Provides new features using jQuery attribute selectors
                                </para>
                            </listitem>
                        </itemizedlist>
                        <para><anchor xml:id="Tellurium_Architecture.15" xreflabel="The
Group Locating Concept (GLC) exploits the group information inside a
collection of UI objects to assist in finding the locator of the UI
objects collection. "/>The Group Locating Concept (GLC) exploits the group information inside a collection of UI objects
                            to assist in finding the locator of the UI objects collection.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.16"
                                      xreflabel="The Eventhandler handles all events such as &quot;click&quot;, &quot;type&quot;, &quot;select&quot;, etc. "/>
                            The Eventhandler handles all events such as &quot;click&quot;, &quot;type&quot;, &quot;select&quot;,
                            etc.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.17" xreflabel="The
Data Accessor fetches data or UI status from the DOM. The dispatcher
delegates all calls it receives from the Eventhandler and the data
accessor attached to the connector is also connected to the Tellurium
engine. "/>The Data Accessor fetches data or UI status from the DOM. The dispatcher delegates all calls it receives from
                            the Eventhandler and the data accessor attached to the connector is also connected to the
                            Tellurium engine.
                        </para>
                        <para><anchor xml:id="Tellurium_Architecture.18" xreflabel="The dispatcher is
designed to decouple the rest of the Tellurium framework from the base
test driving engine so that it can be switched to a different test
driving engine by simply changing the dispatcher logic. "/>The dispatcher is designed to decouple the rest of the
                            Tellurium framework from the base test driving engine so that it can be switched to a
                            different test driving engine by simply changing the dispatcher logic.
                        </para>
                        <bridgehead remap="h1"><anchor xml:id="How_Tellurium_Works" xreflabel="How Tellurium Works"/>How
                            Tellurium Works
                        </bridgehead>
                        <para><anchor xml:id="How_Tellurium_Works.1"
                                      xreflabel="Tellurium works in two mode. The first one is to work as a wrap of the Selenium framework. "/>
                            Tellurium works in two mode. The first one is to work as a wrap of the Selenium framework.
                        </para>
                        <para>
                            <anchor xml:id="How_Tellurium_Works.2" xreflabel=""/>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/TelluriumRunningMode1.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/TelluriumRunningMode1.png" scalefit="1" width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <para><anchor xml:id="How_Tellurium_Works.3" xreflabel="That
is to say, Tellurium core generates the runtime locator based on the
attributes in a UI module and then pass the selenium calls to Selenium
core with Tellurium extensions. "/>That is to say, Tellurium core generates the runtime locator based on the attributes
                            in a UI module and then pass the selenium calls to Selenium core with Tellurium extensions.
                        </para>
                        <para><anchor xml:id="How_Tellurium_Works.4"
                                      xreflabel="Tellurium is evolving to its own test driving Engine and the work mode is different as shown in the following sequence diagram. "/>
                            Tellurium is evolving to its own test driving Engine and the work mode is different as shown
                            in the following sequence diagram.
                        </para>
                        <para>
                            <anchor xml:id="How_Tellurium_Works.5" xreflabel=""/>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/TelluriumRunningMode2.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/TelluriumRunningMode2.png" scalefit="1" width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <para><anchor xml:id="How_Tellurium_Works.6" xreflabel="The
Tellurium Core will convert the UI module into a JSON representation
and pass it to Tellurium Engine for the first time when the UI module
is used. The Tellurium Engine uses the Santa algorithm to locate the
whole UI module and put it into a cache. For the sequent calls, the
cached UI module will be used instead of locating them again. Another
new features in Tellurium 0.7.0 is the "/>The Tellurium Core will convert the UI module into a JSON representation and
                            pass it to Tellurium Engine for the first time when the UI module is used. The Tellurium
                            Engine uses the Santa algorithm to locate the whole UI module and put it into a cache. For
                            the sequent calls, the cached UI module will be used instead of locating them again. Another
                            new features in Tellurium 0.7.0 is the<link
                                    xl:href="http://code.google.com/p/aost/wiki/Tellurium070Update#Macro_Command">Macro
                                Command</link>, which combine multiple commands into one batch and then send them to
                            Tellurium engine in one call to reduce the round trip latency. For more new features in
                            0.7.0, please read<link xl:href="http://code.google.com/p/aost/wiki/Tellurium070Update">What&apos;s
                                New in Tellurium 0.7.0</link>.
                        </para>
                        <bridgehead remap="h1"><anchor xml:id="History" xreflabel="History"/>History
                        </bridgehead>
                        <para><anchor xml:id="History.1"
                                      xreflabel="Tellurium was started in June 2007 as an internal project and became "/>
                            Tellurium was started in June 2007 as an internal project and became
                            <link xl:href="http://code.google.com/p/aost">an open source project on Google Code</link>
                            in June 2008. We release on a regular basis and the latest release 0.7.0 will be out next
                            month.
                        </para>
                        <para>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/telluriumhistory.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/telluriumhistory.png" scalefit="1" width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <bridgehead remap="h1"><anchor xml:id="Team_and_Community" xreflabel="Team and Community"/>Team
                            and Community
                        </bridgehead>
                        <para>
                            <link xl:href="http://code.google.com/p/aost/wiki/ContributorList">Tellurium Team</link>
                            consists of 4-5 active team members and couple more contributors. We have
                            <link xl:href="http://groups.google.com/group/tellurium-users">Tellurium user group</link>
                            and<link xl:href="http://groups.google.com/group/tellurium-developers">Tellurium developer
                            group</link>. Latest update information are available on<link xl:href="">
                            http://twitter.com/TelluriumSource twitter</link>. Tellurium also provides a community
                            repository on
                            <link xl:href="http://github.com/telluriumsource/tellurium">GitHub</link>
                            so that anyone can fork Tellurium and contribute back to us. Tellurium wiki documents will
                            be migrated to<link xl:href="http://telluriumsource.org/display/TE/Home">
                            TelluriumSource.org</link>, a domain owned by us.
                        </para>
                        <bridgehead remap="h1"><anchor xml:id="Tellurium_Sub-projects"
                                                       xreflabel="Tellurium Sub-projects"/>Tellurium Sub-projects
                        </bridgehead>
                        <para><anchor xml:id="Tellurium_Sub-projects.1" xreflabel="Tellurium
began as a small core project and quickly generated multiple
sub-projects including: UDL, Core, Engine, Widget extensions, Maven
Archetypes, and Trump sub-projects as shown in the following diagram. "/>Tellurium began as a small core project and
                            quickly generated multiple sub-projects including: UDL, Core, Engine, Widget extensions,
                            Maven Archetypes, and Trump sub-projects as shown in the following diagram.
                        </para>
                        <para>
                            <anchor xml:id="Tellurium_Sub-projects.2" xreflabel=""/>
                            <inlinemediaobject>
                                <imageobject role="html">
                                    <imagedata fileref="./media/NewTelluriumSubProjects.png" scalefit="1"/>
                                </imageobject>
                                <imageobject role="fo">
                                    <imagedata contentdepth="100%" contentwidth="" depth=""
                                               fileref="./media/NewTelluriumSubProjects.png" scalefit="1" width="100%"/>
                                </imageobject>
                            </inlinemediaobject>
                        </para>
                        <itemizedlist>
                            <listitem>
                                <para><anchor xml:id="Tellurium_Sub-projects.3" xreflabel="Tellurium UDL: "/>Tellurium
                                    UDL:
                                    <link xl:href="http://code.google.com/p/aost/wiki/TelluriumUIDDescriptionLanguage">
                                        Tellurium UID Description Language
                                    </link>
                                    (UDL) Parser.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Tellurium Engine: Based on Selenium Core with UI module, CSS selector, command
                                    bundle, and exception hierarchy support.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Tellurium Core: UI module, APIs, DSL, Object to Runtime Locator mapping (OLM), and
                                    test support.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Tellurium Extensions: Dojo Javascript widgets and ExtJS Javascript widgets.</para>
                            </listitem>
                            <listitem>
                                <para>Tellurium UI Module Plugin (Trump):
                                    <link xl:href="http://code.google.com/p/aost/wiki/TrUMP">A Firefox plugin</link>
                                    to automatically generate the UI module after users select the UI elements from the
                                    web under testing.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Tellurium Maven Archetypes:
                                    <link xl:href="http://code.google.com/p/aost/wiki/UserGuide070TelluriumSubprojects#Tellurium_Maven_Archetypes">
                                        Maven archetypes
                                    </link>
                                    to generate skeleton Tellurium JUnit and Tellurium TestNG projects using one Maven
                                    command.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Tellurium Reference Projects: Use Tellurium project site as examples to illustrate
                                    how to use different features in Tellurium and how to create Tellurium test cases.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
</book>
