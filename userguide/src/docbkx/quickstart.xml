<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">

    <title>Getting Started</title>
    <para>This chapter discusses the Tellurium methods for creating a Tellurium project
        followed by descriptions of the primary components used for testing the newly created web
        framework including the UI Module, UI Object and attributes, Logical Container, jQuery
        Selector, UI Templates, and UI Testing Support.
    </para>

    <section>
        <title>Create a Tellurium Project</title>
        <para>Create a Tellurium Project in one of the following methods:
        </para>
        <itemizedlist>
            <listitem>
                <para>Use a Tellurium reference project as a base
                </para>
            </listitem>
            <listitem>
                <para>Use
                    <link xlink:href="http://code.google.com/p/aost/wiki/TelluriumMavenArchetypes">
                        Tellurium Maven archetypes
                    </link>
                </para>
            </listitem>
            <listitem>
                <para>Manually create a Tellurium project using the
                    <link xlink:href="http://code.google.com/p/aost/downloads/list">tellurium jars</link>
                    and a
                    <link xlink:href="http://code.google.com/p/aost/wiki/TelluriumSampleConfigurationFile">
                        Tellurium configuration file
                    </link>
                </para>
            </listitem>
            <listitem>
                <para>Alternatively, create a Tellurium Maven project manually using<link
                        xlink:href="http://code.google.com/p/aost/wiki/TelluriumTestProjectMavenSamplePom">
                    the sample POM file</link>.
                </para>
            </listitem>
        </itemizedlist>

        <mediaobject>
            <imageobject>
                <imagedata fileref="./media/HowToUseTellurium.png" scalefit="1" width="100%"></imagedata>
            </imageobject>
        </mediaobject>

        <section>
            <title>Tellurium Maven Archetypes</title>
            <para>The easiest way to create a Tellurium project is to
                use Tellurium Maven archetypes. Tellurium provides two Maven archetypes for Tellurium JUnit
                test projects and Tellurium TestNG test projects respectively.
            </para>

            <itemizedlist>
                <listitem>
                    <para>tellurium-junit-archetype
                    </para>
                </listitem>
                <listitem>
                    <para>tellurium-testng-archetype
                    </para>
                </listitem>
            </itemizedlist>

            <para>As a result, a user can create a Tellurium project using one Maven command. For example, for a
                Tellurium JUnit project, use:
            </para>

         <programlisting language="java"><?db-font-size 75% ?>
<![CDATA[
mvn archetype:create -DgroupId=your_group_id -DartifactId=your_artifact_id \
   -DarchetypeArtifactId=tellurium-junit-archetype \
   -DarchetypeGroupId=org.telluriumsource \
   -DarchetypeVersion=0.7.0 \
   -DarchetypeRepository=http://maven.kungfuters.org/content/repositories/releases
]]>
        </programlisting>

            <para>Similarly, for a Tellurium TestNG project, use:</para>
          <programlisting language="java"><?db-font-size 75% ?>
<![CDATA[
mvn archetype:create -DgroupId=your_group_id -DartifactId=your_artifact_id \
   -DarchetypeArtifactId=tellurium-testng-archetype \
   -DarchetypeGroupId=org.telluriumsource \
   -DarchetypeVersion=0.7.0 \
   -DarchetypeRepository=http://maven.kungfuters.org/content/repositories/releases
]]>
        </programlisting>

        </section>

        <section>
            <title>Tellurium Ant Projects</title>
            <para>For an Ant user:
            </para>
            <orderedlist>
                <listitem>
                    <para>Download Tellurium 0.7.0 Release package from the
                        <link xlink:href="http://code.google.com/p/aost/downloads/list">Tellurium project
                            download page
                        </link>
                    </para>
                </listitem>
                <listitem>
                    <para>Unpack the Tellurium 0.7.0 Release package and copy dependencies to your project
                        /lib directory together with the
                        <literal>tellurium-core</literal>
                        and
                        <literal>tellurium-udl</literal>
                        0.7.0 jar files.
                    </para>
                </listitem>
                <listitem>
                    <para>Name the Tellurium configuration file as TelluriumConfig.groovy and place it in
                        the project root directory.
                    </para>
                </listitem>
            </orderedlist>
            
            <para>For Ant build scripts, refer to<link
                    xlink:href="http://code.google.com/p/aost/wiki/TelluriumSampleAntBuildScript">the sample
                Tellurium Ant build scripts</link>.
            </para>

        </section>

    </section>

    <section>
        <title>Setup Tellurium Project in IDEs</title>
        <para>A Tellurium Project can be run in IntelliJ, NetBeans, Eclipse, or other IDEs that have
            Groovy support.
        </para>

        <para>If using Maven, open the POM file to let the IDE automatically build the project files.
        </para>

        <section>
            <title>IntelliJ IDEA</title>
            <para>
                IntelliJ IDEA Community edition is free and can be downloaded from<link
                    xlink:href="http://www.jetbrains.com/idea/download/">
                http://www.jetbrains.com/idea/download/</link>. A detailed guide is found on<link
                    xlink:href="http://code.google.com/p/aost/wiki/CustomTelluriumIntelliJProject">How to
                create your own Tellurium testing project with IntelliJ 9.0 Community Edition</link>.
            </para>

        </section>

        <section>
            <title>NetBeans</title>
            <para>
                <link xlink:href="">For NetBeans users, detailed Guides can be found on</link>
                <link xlink:href="http://code.google.com/p/aost/wiki/TelluriumStarterUsingNetBeans">the
                    NetBeans Starters&apos; guide page
                </link>
                and<link xlink:href="http://code.google.com/p/aost/wiki/CustomTelluriumNetBeansProject">How to
                create your own Tellurium testing project with NetBeans 6.5</link>.
            </para>

        </section>

        <section>
            <title>Eclipse</title>
            <para>For Eclipse users, download the Eclipse Groovy Plugin from
                <link xlink:href="http://dist.codehaus.org/groovy/distributions/update/">
                    http://dist.codehaus.org/groovy/distributions/update/
                </link>
                to run the Tellurium project.
            </para>
            <para>For detailed instructions, read<link
                    xlink:href="http://code.google.com/p/aost/wiki/CustomTelluriumEclipseProject">How to create
                your own Tellurium testing project with Eclipse</link>.
            </para>

        </section>
        
    </section>

    <section>
        <title>Create a UI Module</title>
        <para>
            Tellurium provides TrUMP to automatically create UI modules. TrUMP can be downloaded from
            the Tellurium project site:
        </para>
        <para>
            <link xlink:href="http://code.google.com/p/aost/downloads/list">
                http://code.google.com/p/aost/downloads/list
            </link>
        </para>
        <para>Choose the Firefox 2 or Firefox 3 version depending upon the userâ€™s Firefox version, or
            download the Firefox 3 version directly from the Firefox addons site at:
        </para>
        <para>
            <link xlink:href="https://addons.mozilla.org/en-US/firefox/addon/11035">
                https://addons.mozilla.org/en-US/firefox/addon/11035
            </link>
        </para>
        <para>Once installed, restart Firefox. Record UI modules by simply clicking UI elements on the
            web and then click the &quot;Generate&quot; button.
        </para>
        <para>To customize the UI, click the &quot;Customize&quot; button.</para>
        <para>In the example, open the Tellurium download page found on:</para>
        <para>
            <link xlink:href="http://code.google.com/p/aost/downloads/list">
                http://code.google.com/p/aost/downloads/list
            </link>
        </para>
        <para>Record the download search module as follows:</para>
       
        <mediaobject>
            <imageobject>
                <imagedata fileref="./media/TrUMPRecordDownloadPageSmall.png" scalefit="1" width="100%"></imagedata>
            </imageobject>
        </mediaobject>

        <para>After the UI module is customized, export it as the module file
            <literal>NewUiModule.groovy</literal>
            to the demo project and add a couple of methods to the class:
        </para>

        <programlisting language="java"><?db-font-size 75% ?>
<![CDATA[
class NewUiModule extends DslContext {

  public void defineUi() {
    ui.Form(uid: "TelluriumDownload", clocator: [tag: "form", method: "get",
       action: "list"], group: "true")
    {
      Selector(uid: "DownloadType", clocator: [tag: "select", name: "can", id: "can"])
      InputBox(uid: "Input", clocator: [tag: "input", type: "text", name: "q", id: "q"])
      SubmitButton(uid: "Search", clocator: [tag: "input", type: "submit",
               value: "Search"])
    }
  }

  public void searchDownload(String keyword) {
    keyType "TelluriumDownload.Input", keyword
    click "TelluriumDownload.Search"
    waitForPageToLoad 30000
  }

  public String[] getAllDownloadTypes() {
    return getSelectOptions("TelluriumDownload.DownloadType")
  }

  public void selectDownloadType(String type) {
    selectByLabel "TelluriumDownload.DownloadType", type
  }
}
]]>
        </programlisting>

    </section>

    <section>
        <title>Create Tellurium Test Cases</title>
        <para>Once the UI module is created, create a new Tellurium test case
            <literal>NewTestCase</literal>
            by extending
            <literal>TelluriumJUnitTestCase</literal>
            class
        </para>

        <programlisting language="java"><?db-font-size 75% ?>
<![CDATA[
public class NewTestCase extends TelluriumJUnitTestCase {
    private static NewUiModule app;

    @BeforeClass
    public static void initUi() {
        app = new NewUiModule();
        app.defineUi();
    }

    @Before
    public void setUpForTest() {
        connectUrl("http://code.google.com/p/aost/downloads/list");
    }

    @Test
    public void testTelluriumProjectPage() {
        String[] allTypes = app.getAllDownloadTypes();
        assertNotNull(allTypes);
        assertTrue(allTypes[1].contains("All Downloads"));
        app.selectDownloadType(allTypes[1]);
        app.searchDownload("TrUMP");
    }
}
]]>
        </programlisting>

        <para>Compile the project and run the new test case. </para>

    </section>
</chapter>