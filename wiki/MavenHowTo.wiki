#summary How to obtain and use Tellurium via Maven.
#labels Phase-Support
<wiki:toc max_depth="3" />

= Introduction =

Tellurium has converted its project structure to use Maven. This document will explain the steps necessary to retrieve the Maven artifacts.

= Prerequisites =

You will need to be running Maven version 2.0.9, downloadable from http://maven.apache.org/download.html.

If you never installed Maven before, please follow [http://maven.apache.org/download.html#Installation the official Maven Installation Guide].

= settings.xml =

Here is a sample settings.xml that will allow you to automatically include Tellurium artifacts in your Maven project. This should go in your ~/.m2/settings.xml file:

{{{
<settings>
    <profiles>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <repositories>
                 <repository>  
                    <id>kungfuters-public-snapshots-repo</id>
                    <name>Kungfuters.org Public Snapshot Repository</name>
                    <releases>          
                        <enabled>false</enabled>
                    </releases>         
                    <snapshots>         
                        <enabled>true</enabled> 
                    </snapshots>        
                    <url>http://kungfuters.org/nexus/content/repositories/snapshots</url>
                </repository>   
                <repository>    
                    <id>kungfuters-public-releases-repo</id>
                    <name>Kungfuters.org Public Releases Repository</name>
                    <releases>          
                        <enabled>true</enabled> 
                    </releases>         
                    <snapshots>         
                        <enabled>false</enabled>
                    </snapshots>        
                    <url>http://kungfuters.org/nexus/content/repositories/releases</url>
                </repository>   
            </repositories>
        </profile>
    </profiles>
</settings>
}}}

= Dependency =

To include Tellurium as a dependency in your project, add the following to your pom.xml:

{{{
<dependencies>
    ...
    <dependency>
      <groupId>tellurium</groupId>
      <artifactId>tellurium-core</artifactId>
      <version>0.6.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    ...
</dependencies>
}}}

= Build information =

To find regular build information updates, see http://kungfuters.org/tellurium. There you will find information about the project as well as unit test and coverage reports.

= Subversion Clients =
To check out code from google code SVN, you should use SVN client plugins in IDEs or you can use a standalone SVN client tools such as
  * [http://smartsvn.com SmartSVN]: a good cross-platform client that supports Subversion  up to 1.5
  * [http://tortoisesvn.tigris.org TortoiseSVN]: a good Windows client that supports Subversion up to 1.5

= Build Tellurium from Source =

If you want to build Tellurium from source, you can check out the trunk code using subversion command,

{{{
svn checkout http://aost.googlecode.com/svn/trunk/ tellurium
}}}

or using mvn command,

{{{
mvn scm:checkout -DconnectionUrl=scm:svn:http://aost.googlecode.com/svn/trunk -DcheckoutDirectory=tellurium
}}}

Be aware that the Maven command calls the subversion client to do the job and you must have the client installed in your system.

If you want to build the whole project, just use

{{{
mvn clean install
}}}

and Maven will compile source code and resources, compile test code and test resources, run all tests, and then install all artifacts to your local repository under YOUR_HOME/.m2/repository.

Sometimes, tests may break and if you still want to proceed, please use the ignore flag

{{{
mvn clean install -Dmaven.test.failure.ignore=true
}}} 

If you want to build an individual project, just go to that project directory and run the same command as above.

If you like to run the tests, use command

{{{
mvn test
}}}

The sub-projects under the tools directory include Tellurium Maven archetypes and trump code, you may not really want to build them by yourself. For trump, the artifacts include a .xpi file.

The assembly project just creates a set of tar files and you may not need to build it either. 

= Create a New Tellurium Test Project using Maven =

Tellurium provides [http://code.google.com/p/aost/wiki/TelluriumMavenArchetypes two maven archetypes], i.e., tellurium-junit-archetype and tellurium-testng-archetype for Tellurium JUnit test project and Tellurium TestNG test project, respectively.

Run the following maven command to create a new JUnit project

{{{
mvn archetype:create -DgroupId=your_group_id -DartifactId=your_artifact_id -DarchetypeArtifactId=tellurium-junit-archetype -DarchetypeGroupId=tellurium -DarchetypeVersion=1.0-SNAPSHOT
}}}

Without adding the Tellurium Maven repository, you can specify it in the command line as
{{{
mvn archetype:create -DgroupId=your_group_id -DartifactId=your_artifact_id -DarchetypeArtifactId=tellurium-junit-archetype -DarchetypeGroupId=tellurium -DarchetypeVersion=1.0-SNAPSHOT \
                     -DarchetypeRepository=http://kungfuters.org/nexus/content/repositories/snapshots
}}}

For TestNG project, you should use a different archetype

{{{
mvn archetype:create -DgroupId=your_group_id -DartifactId=your_artifact_id -DarchetypeArtifactId=tellurium-testng-archetype -DarchetypeGroupId=tellurium -DarchetypeVersion=1.0-SNAPSHOT
}}}

If you want to see a detailed example on how to create a new Tellurium test project, you can read [http://code.google.com/p/aost/w/edit/TenMinutesToTellurium Ten Minutes To Tellurium]

= Reference Material =

  * [http://www.sonatype.com/books/maven-book/reference/public-book.html Maven: The Definitive Guide]
  * [http://repo.exist.com/dist/maestro/1.7.0/BetterBuildsWithMaven.pdf Better Builds with maven]