#summary Use Firebug and JQuery to Trace Problems in Tellurium Tests.
#labels Phase-Support

= Introduction =

From time to time, a lot of Tellurium run into problems for their Tellurium tests and asked for help. The difficult thing is that our Tellurium developers do not have access to their application and even their whole test code. For most cases, we can only give some hints on what the problems might be. As a result, a practical way to trace/debug Tellurium test code is very important to our users. That is why we create this wiki page to share our experiences on how to debug Tellurium code with Firebug and jQuery.

Tellurium test mainly consists of two parts, i.e., the Java/Groovy test code and JavaScript code in our customized Selenium server. Trace and debug Java/Groovy code in IDE is very simple and thus we only focus on the custom Selenium server part. 

= Firefox Profile =

Usually, you will see a lot of posts about using the following command to manage Firefox profiles

{{{
Firefox -ProfileManager
}}}

Unfortunately, this seems not working for Firefox 3.5. (At least on my Linux box). I have to use the following command instead 

{{{
firefox -ProfileManager -no-remote
}}}

Once you get there, you can create a new Firefox profile.

http://tellurium-users.googlegroups.com/web/FireFoxUserProfile.png?gda=I4FoeUgAAACvY3VTaWrtpkaxlyj9o09Emp7WzKfacwuA5qU_hvWhiTsYZlJux9GJX8kg1N3C8bklzhb83kORdLwM2moY-MeuGjVgdwNi-BwrUzBGT2hOzg&gsc=U1o_cQsAAAA1lkHi4n397EEqRcu0Nd-6

= Firebug Support =

To add Firebug support, one way is to install Firebug plugin to your web browser. You can get Firebug from 

https://addons.mozilla.org/en-US/firefox/addon/1843

Then, use Firefox profile in your Tellurium Tests. For example, you can add the Firefox profile in TelluriumConfig.groovy as follows,

{{{
tellurium{
    //embedded selenium server configuration
    embeddedserver {
        //port number
        port = "4444"
        //whether to use multiple windows
        useMultiWindows = false
        //whether to run the embedded selenium server. If false, you need to manually set up a selenium server
        runInternally = true
        //profile location
        profile = "/home/jfang/.mozilla/firefox/zlduhghq.test"
        //user-extension.js file
        userExtension = "target/test-classes/extension/user-extensions.js"
    }
}}}

Or you can use the following command to specify the profile if you run the Selenium server externally,

{{{
[jfang@Mars ]$ java -jar selenium-server.jar -profilesLocation /home/jfang/.mozilla/firefox/zlduhghq.test
}}}

But sometimes, Selenium server has trouble to create a new profile from your profile and it might be better to add the Firebug plugin directly to the Selenium server. To do this, you need to following the following steps.

First, unpack the custom Selenium server

{{{
[jfang@Mars ]$ jar xvf selenium-server.jar
}}}

You will see all the files and directories listed as follows

{{{
[jfang@Mars Mars]$ ls -l
-rw-rw-r--. 1 jfang jfang    1677 2009-06-09 12:59 coding-conventions.txt
drwxrwxr-x. 6 jfang jfang    4096 2009-06-17 18:41 core
drwxrwxr-x. 3 jfang jfang    4096 2009-06-17 18:41 customProfileDirCUSTFF
drwxrwxr-x. 3 jfang jfang    4096 2009-08-14 16:58 customProfileDirCUSTFFCHROME
drwxrwxr-x. 3 jfang jfang    4096 2009-06-17 18:41 cybervillains
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 doctool
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 hudsuckr
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 images
-rw-rw-r--. 1 jfang jfang    1933 2009-06-09 12:59 index.html
-rw-rw-r--. 1 jfang jfang     620 2009-06-09 12:59 install-readme.txt
drwxrwxr-x. 3 jfang jfang    4096 2009-06-17 18:41 javax
drwxrwxr-x. 6 jfang jfang    4096 2009-06-17 18:41 jsunit
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 killableprocess
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 konqueror
drwxrwxr-x. 3 jfang jfang    4096 2009-06-17 18:41 META-INF
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 opera
drwxrwxr-x. 6 jfang jfang    4096 2009-06-17 18:41 org
-rw-rw-r--. 1 jfang jfang    2020 2009-06-09 12:59 readyState.xpi
-rw-rw-r--. 1 jfang jfang  129458 2009-06-09 12:59 reference.html
-rw-rw-r--. 1 jfang jfang      55 2009-06-12 15:12 selenium-ant.properties
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 sslSupport
drwxrwxr-x. 2 jfang jfang    4096 2009-06-17 18:41 strands
drwxrwxr-x. 5 jfang jfang    4096 2009-06-17 18:41 tests
drwxrwxr-x. 3 jfang jfang    4096 2009-06-17 18:41 unittest
-rw-rw-r--. 1 jfang jfang     153 2009-06-12 15:14 VERSION.txt
}}}

Then, copy your Firebug installed in your Firefox profile to the profiles in Selenium Server.

{{{
[jfang@Mars Mars]$ cp -rf /home/jfang/.mozilla/firefox/zlduhghq.test/extensions/firebug\@software.joehewitt.com customProfileDirCUSTFF/extensions/
[jfang@Mars Mars]$ cp -rf /home/jfang/.mozilla/firefox/zlduhghq.test/extensions/firebug\@software.joehewitt.com customProfileDirCUSTFFCHROME/extensions/
}}}

After that, re-pack the custom Selenium server

{{{
jar cmf META-INF/MANIFEST.MF selenium-server.jar *
}}}

Fortunately, you don't need to repeat the above step any more, we provide a custom Selenium server with Firebug support in our Maven repository. You should use the following Maven dependency,

{{{
        <dependency>
            <groupId>org.openqa.selenium.server</groupId>
            <artifactId>selenium-server</artifactId>
            <version>1.0.1-tf</version>
          </dependency>
        </dependencies>
}}}

Of course, you need to use our Maven repository

{{{
        <repository>
            <id>kungfuters-thirdparty-releases-repo</id>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>http://kungfuters.org/nexus/content/repositories/thirdparty</url>
        </repository>
}}}

= Debug JavaScript Using Firebug =

First, you need to put a breakpoint in your Java/Groovy test code, for example, we put a breakpoint on UserTestCase class,


http://tellurium-users.googlegroups.com/web/TelluriumUserTestCase.png?gda=aK5n30sAAACvY3VTaWrtpkaxlyj9o09Eze2zIhq6411I_8TGzz5DI-qW4SmLmVbvXBbEmeIsaNidYZYxwa0BE4XjboRU-oYaBkXa90K8pT5MNmkW1w_4BQ&gsc=EAymlwsAAABsf4AHuALmOmkLNHG2feRw

Then, use the "Debug" menu to start your test case. Once the test reaches breakpoint, you can go the Firefox browser to open Firebug.

http://tellurium-users.googlegroups.com/web/TelluriumOpenFirebug.png?gda=ixZrO0oAAACvY3VTaWrtpkaxlyj9o09EDO6MGplfJGHVhUec0kpXPoiAcPDq6RaxFOV-k14EkLyB_EtY4PNGNRy1KtA3K9bL_e3Wg0GnqfdKOwDqUih1tA&gsc=hGoVDAsAAAB8vRO2zTlOouy3DcrgOZrb

Sometime, the Firebug console is disabled, you need to enable it. After that, you can select the JavaScript files including those from Selenium core.

http://tellurium-users.googlegroups.com/web/TelluriumFirebugScript.png?gda=4-oX70wAAACvY3VTaWrtpkaxlyj9o09E7NkZ8HCattGn-1iiIrkpLwyVYbbBb4wvSnrgfyj7FfY29mST-NKidxSrAhXCh25v_Vpvmo5s1aABVJRO3P3wLQ&gsc=hGoVDAsAAAB8vRO2zTlOouy3DcrgOZrb

You can set a breakpoint in the JavaScript file and resume the test until it hits the breakpoint in the JavaScript file. You can find more details on [http://getfirebug.com/js.html JavaScript debug with Firebug].

= Trace Problems Using jQuery =

The custom Selenium server comes with jQuery 1.3.2 when we added support for jQuery selector in Tellurium. But we yielded the "$" sign and also renamed jQuery to teJQuery to avoid conflicts with user's jQuery library.

To use jQuery, you need to use the single window module for the custom Selenium server, i.e., change settings in TelluriumConfig.groovy to

{{{
        //whether to use multiple windows
        useMultiWindows = false
        //whether to run the embedded selenium server. If false, you need to manually set up a selenium server
        runInternally = true
}}}

If you run the Selenium server externally, use can use the following command to start it in a single window mode
{{{
java -jar selenium-server.jar -singlewindow
}}}
