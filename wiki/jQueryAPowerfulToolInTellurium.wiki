#summary jQuery: A Powerful Tool in Tellurium.
#labels Phase-Implementation,Phase-Support

= Introduction =

jQuery is one of the key techniques used in Tellurium. Here we like to cover the use of jQuery in Tellurium.

= Use of jQuery in Tellurium =

== CSS Selector ==

Tellurium uses CSS selector as the default locator and the CSS selector is backed up jQuery.
When Tellurium works as a Selenium Wrap, Tellurium core generates runtime locator from UI module definition. Take the following Google Search module as an example,

{{{
    ui.Container(uid: "Google", clocator: [tag: "table"]) {
      InputBox(uid: "Input", clocator: [tag: "input", title: "Google Search", name: "q"])
      SubmitButton(uid: "Search", clocator: [tag: "input", type: "submit", value: "Google Search", name: "btnG"])
      SubmitButton(uid: "ImFeelingLucky", clocator: [tag: "input", type: "submit", value: "I'm Feeling Lucky", name: "btnI"])
    }
}}}

The generated runtime CSS selectors can be dumped out by calling

{{{
   dump("Google");
}}}

The results are as follows, where the content after "jquery=" is the CSS selector, for example "table input[title=Google Search][name=q]". 

{{{
Dump locator information for Google
-------------------------------------------------------
Google: jquery=table
Google.Input: jquery=table input[title=Google Search][name=q]
Google.Search: jquery=table input[type=submit][value=Google Search][name=btnG]
Google.ImFeelingLucky: jquery=table input[type=submit][value$=m Feeling Lucky][name=btnI]
-------------------------------------------------------
}}}

On the Selenium Core side, Tellurium locates UI element with the generated CSS selector using jQuery.

== jQuery as a Test Driving Mechanism ==

[http://code.google.com/p/aost/wiki/telluriumengine Tellurium new Engine] uses jQuery as a test driving mechanism. For example, the "mouseOver" action can be implemented by the following jQuery Event. 

{{{
TelluriumApi.prototype.mouseOver = function(locator){
    var element = this.cacheAwareLocate(locator);
    teJQuery(element).trigger('mouseover');
};
}}}

where teJQuery is an alias of jQuery to avoid name collision. 


  